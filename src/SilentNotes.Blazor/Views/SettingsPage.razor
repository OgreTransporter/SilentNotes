@page "/settings"
@using System.ComponentModel
@using SilentNotes.Models
@using SilentNotes.ViewModels
@using SilentNotes.Services

@inject ISnackbar Snackbar
@inject ILanguageService LanguageService
@inject ISvgIconService IconService
@inject ISettingsService SettingsService

@implements IDisposable

@* Main menu *@
<MudAppBar Fixed="true" Class="" Dense="true">
    <MudTooltip Text="@LanguageService["back"]">
        <MudIconButton Href="/" Icon="@IconService[IconNames.ArrowLeft]" Color="Color.Inherit" Class="mr-5" />
    </MudTooltip>

    <MudSpacer />

    <MudMenu Dense="true" AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight">
        <ActivatorContent>
            <MudIconButton Icon="@IconService[IconNames.DotsVertical]" Color="Color.Inherit" />
        </ActivatorContent>
        <ChildContent>
            <MudNavMenu Rounded="true" Margin="Margin.Dense" Class="px-1">
                <MudNavLink Icon="@IconService[IconNames.Earth]">@LanguageService["gui_localization_test"]</MudNavLink>
            </MudNavMenu>
        </ChildContent>
    </MudMenu>
</MudAppBar>

@* watermark image *@
<MudIcon Class="background-icon" Icon="@IconService[IconNames.Settings]" Style="@($"right:-128px; top:-154px;")" />

@* body *@
<MudGrid Class="ma-0 px-4 mud-width-full">
    <MudItem xs="12" sm="10" md="7">
        <h3>SettingsPage</h3>

        <div class="form-row">
            <div class="form-group">
                <MudCheckBox @bind-Checked="@ViewModel.UseSolidColorTheme" id="UseSolidColorTheme" />
                <label for="UseSolidColorTheme" class="mr-2">@LanguageService["gui_theme_solid_color"]</label>
            </div>

            <div class="form-group">
                <MudElement Class="color-swatch ml-2 mr-0 align-self-end" Style="@ColorSwatchStyle"/>
                <MudColorPicker @bind-Text="@ViewModel.ColorForSolidThemeHex"
                    Class="ml-0 mr-4 pa-0"
                    Style="width:1px"
                    DisableToolbar="true" DisableAlpha="true"
                    ColorPickerView="ColorPickerView.Grid" ColorPickerMode="ColorPickerMode.HEX"
                    AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight" />
            </div>
        </div>
    </MudItem>
</MudGrid>

@code {
    private SettingsViewModel ViewModel { get; set; }

    [CascadingParameter]
    public MudTheme SelectedTheme { get; set; }

    private string ColorSwatchStyle 
    { 
        get { return string.Format("background-color:{0}", ViewModel.ColorForSolidThemeHex); }
    }

    protected override void OnInitialized()
    {
        SettingsModel settings = SettingsService.LoadSettingsOrDefault();
        ViewModel = new SettingsViewModel(settings);
        //ViewModel.PropertyChanged += PropertyChanged;
    }

    public void Dispose()
    {
        //ViewModel.PropertyChanged -= PropertyChanged;
    }

    //private void PropertyChanged(object sender, PropertyChangedEventArgs e)
    //{
    //    if (e.PropertyName == nameof(SettingsViewModel.ColorForSolidThemeHex))
    //        StateHasChanged();
    //    ColorExampleStyle = string.Format("background-color:{0}", ViewModel.ColorForSolidThemeHex);
    //}
}
