@page "/transfercodehistory"
@using SilentNotes.Models
@using SilentNotes.ViewModels
@using SilentNotes.Services

@inject ILanguageService LanguageService
@inject ISvgIconService IconService
@inject IKeyboardShortcutService KeyboardShortcutService
@inject IVersionService VersionService
@inject INativeBrowserService NativeBrowserService
@inject ISettingsService SettingsService

@implements IDisposable

<style type="text/css">
    .code {
        font-family: Consolas;
        font-size: 28px;
        text-align: center;
        background-color: var(--mud-palette-tertiary);
        color: var(--mud-palette-tertiary-text);
    }
</style>

@* Main menu *@
<MudAppBar Fixed="true" Dense="true">
    <MudIconButton @ref="_backButton" Href="/back" Icon="@IconService[IconNames.ArrowLeft]" Color="Color.Inherit" Class="mr-5" Title="@LanguageService["back"]" />
</MudAppBar>

@* watermark image *@
<MudIcon Class="background-icon" Icon="@IconService[IconNames.Key]" Style="@($"right:0; top:-50px;")" />

@* body *@
<MudContainer id="content" Class="mud-container-left mud-container-p" MaxWidth="MaxWidth.Medium">
    <h1 class="h-colored">@LanguageService["transfer_code"]</h1>

    @if (ViewModel.TransferCodeFmt == "")
    {
        <MudAlert Class="d-inline-flex my-4" Severity="Severity.Info" Elevation="1">@LanguageService["transfer_not_existing"]</MudAlert>
    }
    else
    {
        <p class="my-4">@LanguageService["transfer_code_usage"]</p>

        <div Class="d-flex justify-center">
            <MudPaper Class="code px-4 py-2 rounded" Elevation="2">
                <MudElement>@ViewModel.TransferCodeFmt</MudElement><MudIconButton Class="ml-3" OnClick="@(() => ViewModel.CopyTransferCodeCommand.Execute(null))" Icon="@Icons.Material.Filled.ContentCopy" Color="Color.Inherit" Title="@LanguageService["copy"]"/>
            </MudPaper>
        </div>

        <p class="my-4">@LanguageService["transfer_code_writedown"]</p>

        @if (ViewModel.IsTransfercodeHistoryVisible)
        {
            <MudExpansionPanels Class="mt-6">
                <MudExpansionPanel Text="@LanguageService["transfer_code_show_history"]">
                    <MudList >
                        @foreach (var historicalTransferCode in ViewModel.TransferCodeHistory)
                        {
                            <MudListItem Text="@historicalTransferCode" />
                        }
                    </MudList>
                </MudExpansionPanel>
            </MudExpansionPanels>
        }
    }
</MudContainer>

@code {
    private bool _isDisposed;
    private MudBaseButton _backButton;
    private IKeyboardShortcuts _keyboardShortcuts;

    protected override void OnInitialized()
    {
        SettingsModel settings = SettingsService.LoadSettingsOrDefault();
        ViewModel = new TransferCodeHistoryViewModel(settings);

        _keyboardShortcuts = KeyboardShortcutService.CreateShortcuts()
            .Add(ModCode.None, Code.Escape, () => _backButton);
    }

    public void Dispose()
    {
        if (_isDisposed)
            return;
        _isDisposed = true;
        _keyboardShortcuts.Dispose();
    }

    private TransferCodeHistoryViewModel ViewModel { get; set; }
}